version: "3.9"

# Use this spec to run all of the code in separate services.

services:
  # Instance used for dev application instance.
  postgres:
    image: postgres:16-alpine
    shm_size: 4g
    cpu_count: 4
    user: root
    volumes:
      - ./.pgdata/database:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=momo
      - PGDATA=/var/lib/postgresql/data/db-files/
    expose:
      - 5432
    ports:
      - "5432:5432"
    networks:
      - momo

  # The main API instance set to enable default routes and reporting
  api:
    image: momo/api
    build:
      context: ./
      dockerfile: ./Dockerfile.core
    environment:
      - ENABLE_DEFAULT_ROUTES=true # Load default routes
      - ENABLE_REPORTING_ROUTES=true # Load reporting routes
      - EXPOSE_SWAGGER_UI=true # Just for local demo
    expose:
      - 8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - momo

  # The admin API instance with only admin routes
  admin:
    image: momo/api
    build:
      context: ./
      dockerfile: ./Dockerfile.core
    environment:
      - ENABLE_ADMIN_ROUTES=true # Only load admin routes
      - SKIP_DB_RESET=true # Here, we don't reset the DB; we do it in the other instance.
      - EXPOSE_SWAGGER_UI=true # Just for local demo
    expose:
      - 8081
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    networks:
      - momo

  svc1:
    image: momo/svc1
    build:
      context: ./
      dockerfile: ./Dockerfile.svc
    environment:
      - SVC_ROLE=WorkItemStatusMonitorService
    depends_on:
      - api
    networks:
      - momo

  svc2:
    image: momo/svc2
    build:
      context: ./
      dockerfile: ./Dockerfile.svc
    environment:
      - SVC_ROLE=WorkItemMonitorService
    depends_on:
      - api
    networks:
      - momo

networks:
  momo:
